/**
 * Generated by orval v7.11.2 üç∫
 * Do not edit manually.
 * guild_type.proto
 * OpenAPI spec version: version not set
 */
export interface Any {
	"@type"?: string;
	[key: string]: unknown;
}

export interface AuthMeResponse {
	userId: string;
	exp: string;
	iat: string;
}

export interface Category {
	id: string;
	guildId: string;
	name: string;
	createdAt: string;
}

export interface CategoryDetail {
	id: string;
	guildId: string;
	name: string;
	createdAt: string;
	channels: Channel[];
}

export interface Channel {
	id: string;
	categoryId: string;
	name: string;
	createdAt: string;
}

export interface CreateBody {
	content: string;
	replyId?: string;
}

export interface CreateCategoryBody {
	name: string;
}

export interface CreateCategoryResponse {
	category: Category;
}

export interface CreateChannelBody {
	name: string;
}

export interface CreateChannelResponse {
	channel: Channel;
}

export interface CreateGuildInviteBody {
	maxUses?: number;
	expiresAt?: string;
}

export interface CreateGuildInviteResponse {
	invite: Invite;
}

export interface CreateGuildRequest {
	name: string;
	description: string;
	iconUrl: string;
}

export interface CreateGuildResponse {
	guild: Guild;
}

export interface CreateResponse {
	message: Message;
}

export type DeleteByMessageIDResponseEmpty = { [key: string]: unknown };

export interface DeleteByMessageIDResponse {
	empty: DeleteByMessageIDResponseEmpty;
}

export type DeleteCategoryResponseEmpty = { [key: string]: unknown };

export interface DeleteCategoryResponse {
	empty: DeleteCategoryResponseEmpty;
}

export type DeleteChannelResponseEmpty = { [key: string]: unknown };

export interface DeleteChannelResponse {
	empty: DeleteChannelResponseEmpty;
}

export type DeleteGuildInviteResponseEmpty = { [key: string]: unknown };

export interface DeleteGuildInviteResponse {
	empty: DeleteGuildInviteResponseEmpty;
}

export type DeleteGuildMemberResponseEmpty = { [key: string]: unknown };

export interface DeleteGuildMemberResponse {
	empty: DeleteGuildMemberResponseEmpty;
}

export interface ExistsResponse {
	exists?: boolean;
}

export interface GetByChannelIDResponse {
	messages: Message[];
}

export interface GetCurrentUserResponse {
	user: UserUser;
}

export interface GetGuildByIDResponse {
	guild: GuildWithMembers;
}

export interface GetGuildByInviteCodeResponse {
	invite: Invite;
}

export interface GetGuildInvitesResponse {
	invites: Invite[];
}

export interface GetGuildOverviewResponse {
	guild: GuildDetail;
}

export interface GetUserByIDResponse {
	user: UserUser;
}

export interface GetUsersByIDsResponse {
	users?: UserUser[];
}

export interface Guild {
	id: string;
	name: string;
	ownerId: string;
	description: string;
	iconUrl: string;
	defaultChannelId: string;
	memberCount?: number;
	createdAt: string;
}

export interface GuildDetail {
	id: string;
	name: string;
	ownerId: string;
	description: string;
	iconUrl: string;
	defaultChannelId: string;
	createdAt: string;
	categories: CategoryDetail[];
}

export interface GuildWithMemberCount {
	id: string;
	name: string;
	ownerId: string;
	description: string;
	iconUrl: string;
	defaultChannelId: string;
	memberCount: number;
	createdAt: string;
}

export interface GuildWithMembers {
	id: string;
	name: string;
	ownerId: string;
	description: string;
	iconUrl: string;
	defaultChannelId: string;
	memberCount: number;
	members: Member[];
	createdAt: string;
}

export interface Invite {
	guildId: string;
	guild?: Guild;
	creatorId: string;
	creator?: GuildUser;
	maxUses?: number;
	currentUses: number;
	inviteCode: string;
	expiresAt?: string;
	createdAt: string;
}

export interface JoinGuildBody {
	[key: string]: unknown;
}

export interface JoinGuildResponse {
	member?: Member;
}

export type LeaveGuildResponseEmpty = { [key: string]: unknown };

export interface LeaveGuildResponse {
	empty: LeaveGuildResponseEmpty;
}

export interface ListMyGuildsResponse {
	guilds: GuildWithMemberCount[];
}

export interface LoginRequest {
	email: string;
	password: string;
}

export interface LoginResponse {
	token: string;
}

export interface Member {
	userId: string;
	guildId: string;
	user?: GuildUser;
	joinedAt: string;
}

export interface Message {
	id: string;
	senderId: string;
	channelId: string;
	replyId?: string;
	content: string;
	createdAt: string;
}

export interface RegisterRequest {
	displayId: string;
	password: string;
	email: string;
	name: string;
	bio: string;
	iconUrl: string;
}

export interface RegisterResponse {
	user: UserUser;
}

export interface Status {
	code?: number;
	message?: string;
	details?: Any[];
}

export interface UpdateByMessageIDBody {
	content: string;
	replyId?: string;
}

export interface UpdateByMessageIDResponse {
	message: Message;
}

export interface UpdateCategoryBody {
	name: string;
}

export interface UpdateCategoryResponse {
	category: Category;
}

export interface UpdateChannelBody {
	name: string;
}

export interface UpdateChannelResponse {
	channel: Channel;
}

export interface UpdateGuildBody {
	name: string;
	iconUrl: string;
	description: string;
	defaultChannelId: string;
}

export interface UpdateGuildResponse {
	guild: Guild;
}

export interface UpdateRequest {
	displayId: string;
	name: string;
	bio: string;
	iconUrl: string;
}

export interface UpdateResponse {
	user: UserUser;
}

export interface GuildUser {
	id: string;
	displayId: string;
	name: string;
	iconUrl: string;
	createdAt: string;
}

export interface UserUser {
	id: string;
	displayId: string;
	name: string;
	bio: string;
	iconUrl: string;
	createdAt: string;
}
