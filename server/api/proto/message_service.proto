syntax = "proto3";

package msg;

option go_package = "./message;messagepb";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "message_message.proto";

service MessageService {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    name: "Message"
    description: "Message management operations"
  };

  rpc Create(CreateRequest) returns (CreateResponse) {
    option (google.api.http) = {
      post: "/api/channels/{channel_id}/messages"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Message"
    };
  }

  rpc GetByChannelID(GetByChannelIDRequest) returns (GetByChannelIDResponse) {
    option (google.api.http) = {
      get: "/api/channels/{channel_id}/messages"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Message"
    };
  }

  rpc UpdateByMessageID(UpdateByMessageIDRequest) returns (UpdateByMessageIDResponse) {
    option (google.api.http) = {
      put: "/api/messages/{message_id}"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Message"
    };
  }

  rpc DeleteByMessageID(DeleteByMessageIDRequest) returns (DeleteByMessageIDResponse) {
    option (google.api.http) = {
      delete: "/api/messages/{message_id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Message"
    };
  }
}
