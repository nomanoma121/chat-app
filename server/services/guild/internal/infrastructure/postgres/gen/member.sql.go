// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: member.sql

package gen

import (
	"context"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

const addMember = `-- name: AddMember :one
INSERT INTO members (guild_id, user_id, nickname, joined_at, updated_at)
VALUES ($1, $2, $3, $4, NOW())
RETURNING guild_id, user_id, nickname, joined_at
`

type AddMemberParams struct {
	GuildID  uuid.UUID
	UserID   uuid.UUID
	Nickname string
	JoinedAt pgtype.Timestamp
}

type AddMemberRow struct {
	GuildID  uuid.UUID
	UserID   uuid.UUID
	Nickname string
	JoinedAt pgtype.Timestamp
}

func (q *Queries) AddMember(ctx context.Context, arg AddMemberParams) (*AddMemberRow, error) {
	row := q.db.QueryRow(ctx, addMember,
		arg.GuildID,
		arg.UserID,
		arg.Nickname,
		arg.JoinedAt,
	)
	var i AddMemberRow
	err := row.Scan(
		&i.GuildID,
		&i.UserID,
		&i.Nickname,
		&i.JoinedAt,
	)
	return &i, err
}
